{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from 'react';\nimport Item from '../item';\n\nvar ProductRow = function ProductRow(product, onCardItemChange, onItemAddition) {\n  //   const;\n  console.log('product in row: ', product.inStockQuantity);\n\n  var _useState = useState('1'),\n      selectedQuantity = _useState[0],\n      setSelectedQuantity = _useState[1];\n\n  return __jsx(\"div\", {\n    key: product._id\n  }, __jsx(Item, {\n    product: product\n  }), __jsx(\"label\", {\n    id: \"quantity-select\"\n  }, \"Select a quantity:\"), __jsx(\"select\", {\n    name: \"item-quantity\",\n    id: \"quantity-select\",\n    value: selectedQuantity,\n    onChange: function onChange(e) {\n      return setSelectedQuantity(e.target.value);\n    }\n  }, _toConsumableArray(Array(product.inStockQuantity)).map(function (u, i) {\n    console.log('what unit here: ', u, i);\n    return __jsx(\"option\", {\n      key: i,\n      value: i\n    }, i);\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: function onClick(e) {\n      return onItemAddition(e.relatedTarget);\n    }\n  }, \"Add\"));\n};\n\nexport default ProductRow;","map":null,"metadata":{},"sourceType":"module"}