{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks';\nimport Item from '../item';\n\nvar ProductRow = function ProductRow(_ref) {\n  var product = _ref.product,\n      savedQuantity = _ref.savedQuantity;\n\n  var _useState = useState(savedQuantity),\n      selectedQuantity = _useState[0],\n      setSelectedQuantity = _useState[1]; // make check to to add item before reload.\n\n\n  var _useAxios = useAxios({\n    url: config.addItem,\n    method: 'POST'\n  }, {\n    manual: true\n  }),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      putData = _useAxios2$.data,\n      putLoading = _useAxios2$.loading,\n      putError = _useAxios2$.error,\n      executePost = _useAxios2[1];\n\n  var onItemAddition = function onItemAddition() {\n    var putData = _objectSpread(_objectSpread({}, product), {}, {\n      quantity: selectedQuantity\n    });\n\n    executePost({\n      data: putData\n    });\n  };\n\n  return __jsx(\"div\", {\n    key: product._id\n  }, __jsx(Item, {\n    product: product\n  }), __jsx(\"label\", {\n    id: \"quantity-select\"\n  }, \"Select a quantity:\"), __jsx(\"select\", {\n    name: \"item-quantity\",\n    id: \"quantity-select\",\n    value: selectedQuantity,\n    onChange: function onChange(e) {\n      return setSelectedQuantity(parseInt(e.target.value));\n    }\n  }, _toConsumableArray(Array(product.inStockQuantity)).map(function (u, i) {\n    return __jsx(\"option\", {\n      key: i,\n      value: i + 1\n    }, i + 1);\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: onItemAddition\n  }, \"Add\"));\n};\n\nexport default ProductRow;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/components/product-row/index.tsx"],"names":["React","useState","config","useAxios","Item","ProductRow","product","savedQuantity","selectedQuantity","setSelectedQuantity","url","addItem","method","manual","putData","data","putLoading","loading","putError","error","executePost","onItemAddition","quantity","_id","e","parseInt","target","value","Array","inStockQuantity","map","u","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBACDN,QAAQ,CAACM,aAAD,CADP;AAAA,MAC1CC,gBAD0C;AAAA,MACxBC,mBADwB,iBAEjD;;;AAFiD,kBAG8BN,QAAQ,CACrF;AACEO,IAAAA,GAAG,EAAER,MAAM,CAACS,OADd;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADqF,EAKrF;AAAEC,IAAAA,MAAM,EAAE;AAAV,GALqF,CAHtC;AAAA;AAAA;AAAA,MAGlCC,OAHkC,eAGxCC,IAHwC;AAAA,MAGhBC,UAHgB,eAGzBC,OAHyB;AAAA,MAGGC,QAHH,eAGJC,KAHI;AAAA,MAGeC,WAHf;;AAWjD,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMP,OAAO,mCACRR,OADQ;AAEXgB,MAAAA,QAAQ,EAAEd;AAFC,MAAb;;AAIAY,IAAAA,WAAW,CAAC;AAAEL,MAAAA,IAAI,EAAED;AAAR,KAAD,CAAX;AACD,GAND;;AAQA,SACE;AAAK,IAAA,GAAG,EAAER,OAAO,CAACiB;AAAlB,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEjB;AAAf,IADF,EAEE;AAAO,IAAA,EAAE,EAAC;AAAV,0BAFF,EAGE;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,KAAK,EAAEE,gBAHT;AAIE,IAAA,QAAQ,EAAE,kBAACgB,CAAD;AAAA,aAAOf,mBAAmB,CAACgB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT,CAA1B;AAAA;AAJZ,KAMG,mBAAIC,KAAK,CAACtB,OAAO,CAACuB,eAAT,CAAT,EAAoCC,GAApC,CAAwC,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACvC;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAC,GAAG;AAA3B,OACGA,CAAC,GAAG,CADP,CADuC;AAAA,GAAxC,CANH,CAHF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEX;AAA/B,WAfF,CADF;AAqBD,CAxCD;;AA0CA,eAAehB,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks';\nimport Link from 'next/link';\nimport Item from '../item';\n\nconst ProductRow = ({ product, savedQuantity }) => {\n  const [selectedQuantity, setSelectedQuantity] = useState(savedQuantity);\n  // make check to to add item before reload.\n  const [{ data: putData, loading: putLoading, error: putError }, executePost] = useAxios(\n    {\n      url: config.addItem,\n      method: 'POST',\n    },\n    { manual: true }\n  );\n\n  const onItemAddition = () => {\n    const putData = {\n      ...product,\n      quantity: selectedQuantity,\n    };\n    executePost({ data: putData });\n  };\n\n  return (\n    <div key={product._id}>\n      <Item product={product} />\n      <label id=\"quantity-select\">Select a quantity:</label>\n      <select\n        name=\"item-quantity\"\n        id=\"quantity-select\"\n        value={selectedQuantity}\n        onChange={(e) => setSelectedQuantity(parseInt(e.target.value))}\n      >\n        {[...Array(product.inStockQuantity)].map((u, i) => (\n          <option key={i} value={i + 1}>\n            {i + 1}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\" onClick={onItemAddition}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default ProductRow;\n"]},"metadata":{},"sourceType":"module"}