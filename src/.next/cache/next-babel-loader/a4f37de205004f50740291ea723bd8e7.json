{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport Item from '../../components/item';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1];\n\n  var _useState = useState(1),\n      quantity = _useState[0],\n      setQuantity = _useState[1];\n\n  var saveItemNumber = function saveItemNumber(number) {\n    return setQuantity(number);\n  };\n\n  var submitQuantity = function submitQuantity() {};\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id\n    }, __jsx(Item, {\n      product: product\n    }), __jsx(Link, {\n      href: \"/shop/product/[id]\",\n      as: \"/shop/product/\".concat(product._id)\n    }, \"View\"), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: submitQuantity\n    }, \"Add\"), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: submitQuantity\n    }, \"Add\"), __jsx(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      placeholder: \"1\",\n      onChange: function onChange(e) {\n        return saveItemNumber(e.target.value);\n      }\n    }));\n  }));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/index.tsx"],"names":["React","useState","config","Link","useAxios","Item","ShopList","getProductList","data","loading","error","refetch","quantity","setQuantity","saveItemNumber","number","submitQuantity","map","product","_id","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBF,QAAQ,CAACF,MAAM,CAACK,cAAR,CAD/B;AAAA;AAAA;AAAA,MACZC,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ;;AAAA,kBAGWV,QAAQ,CAAC,CAAD,CAHnB;AAAA,MAGdW,QAHc;AAAA,MAGJC,WAHI;;AAKrB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA,WAAYF,WAAW,CAACE,MAAD,CAAvB;AAAA,GAAvB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM,CAAE,CAA/B;;AAEA,MAAIP,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,SACE,mBACE,iCADF,EAEGF,IAAI,CAACS,GAAL,CAAS,UAACC,OAAD;AAAA,WACR;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC;AAAlB,OACE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAED;AAAf,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,oBAAX;AAAgC,MAAA,EAAE,0BAAmBA,OAAO,CAACC,GAA3B;AAAlC,cAFF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEH;AAA/B,aALF,EAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEA;AAA/B,aARF,EAWE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAC,GAAzB;AAA6B,MAAA,WAAW,EAAC,GAAzC;AAA6C,MAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,eAAON,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB;AAAA;AAAvD,MAXF,CADQ;AAAA,GAAT,CAFH,CADF;AAoBD,CApCD;;AAsCA,eAAehB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport Item from '../../components/item';\nimport { Product } from '../../interfaces';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios(config.getProductList);\n\n  const [quantity, setQuantity] = useState(1);\n\n  const saveItemNumber = (number) => setQuantity(number);\n  const submitQuantity = () => {};\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {data.map((product: Product) => (\n        <div key={product._id}>\n          <Item product={product} />\n          <Link href=\"/shop/product/[id]\" as={`/shop/product/${product._id}`}>\n            View\n          </Link>\n          <button type=\"submit\" onClick={submitQuantity}>\n            Add\n          </button>\n          <button type=\"submit\" onClick={submitQuantity}>\n            Add\n          </button>\n          <input type=\"number\" min=\"1\" placeholder=\"1\" onChange={(e) => saveItemNumber(e.target.value)} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}