{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport Item from '../../components/item';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1];\n\n  var _useAxios3 = useAxios({\n    url: config.addItem,\n    method: 'POST'\n  }, {\n    manual: true\n  }),\n      _useAxios4 = _slicedToArray(_useAxios3, 2),\n      _useAxios4$ = _useAxios4[0],\n      putData = _useAxios4$.data,\n      putLoading = _useAxios4$.loading,\n      putError = _useAxios4$.error,\n      executePut = _useAxios4[1];\n\n  var _useState = useState(data),\n      cartQuantity = _useState[0],\n      setCartQuantity = _useState[1];\n\n  var saveItemNumber = function saveItemNumber(number) {\n    console.log;\n    setCartQuantity(number);\n  };\n\n  var addItemAndQuantity = function addItemAndQuantity() {\n    console.log('submitting: ');\n    return executePut({\n      data: {\n        cartQuantity: cartQuantity,\n        updatedAt: new Date().toISOString()\n      }\n    });\n  };\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id\n    }, __jsx(Item, {\n      product: product\n    }), __jsx(Link, {\n      href: \"/shop/product/[id]\",\n      as: \"/shop/product/\".concat(product._id)\n    }, __jsx(\"a\", null, \"view product\")), __jsx(\"label\", {\n      id: \"quantity-select\"\n    }, \"Select a quantity:\"), __jsx(\"select\", {\n      name: \"item-quantity\",\n      id: \"quantity-select\"\n    }, _toConsumableArray(Array(product.inStockQuantity)).map(function (u, i) {\n      return __jsx(\"option\", {\n        key: i,\n        value: i\n      }, i);\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: function onClick(product) {\n        return addItemAndQuantity(product);\n      }\n    }, \"Add\"));\n  }));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/index.tsx"],"names":["React","useState","config","Link","useAxios","Item","ShopList","getProductList","data","loading","error","refetch","url","addItem","method","manual","putData","putLoading","putError","executePut","cartQuantity","setCartQuantity","saveItemNumber","number","console","log","addItemAndQuantity","updatedAt","Date","toISOString","map","product","_id","Array","inStockQuantity","u","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBF,QAAQ,CAACF,MAAM,CAACK,cAAR,CAD/B;AAAA;AAAA;AAAA,MACZC,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ;;AAAA,mBAEyDP,QAAQ,CACpF;AACEQ,IAAAA,GAAG,EAAEV,MAAM,CAACW,OADd;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADoF,EAKpF;AAAEC,IAAAA,MAAM,EAAE;AAAV,GALoF,CAFjE;AAAA;AAAA;AAAA,MAENC,OAFM,eAEZR,IAFY;AAAA,MAEYS,UAFZ,eAEGR,OAFH;AAAA,MAE+BS,QAF/B,eAEwBR,KAFxB;AAAA,MAE2CS,UAF3C;;AAAA,kBAUmBlB,QAAQ,CAACO,IAAD,CAV3B;AAAA,MAUdY,YAVc;AAAA,MAUAC,eAVA;;AAYrB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR;AACAJ,IAAAA,eAAe,CAACE,MAAD,CAAf;AACD,GAHD;;AAIA,MAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAON,UAAU,CAAC;AAAEX,MAAAA,IAAI,EAAE;AAAEY,QAAAA,YAAY,EAAZA,YAAF;AAAgBO,QAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAA3B;AAAR,KAAD,CAAjB;AACD,GAHD;;AAKA,MAAIpB,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,SACE,mBACE,iCADF,EAEGF,IAAI,CAACsB,GAAL,CAAS,UAACC,OAAD;AAAA,WACR;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC;AAAlB,OACE,MAAC,IAAD;AAAM,MAAA,OAAO,EAAED;AAAf,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,oBAAX;AAAgC,MAAA,EAAE,0BAAmBA,OAAO,CAACC,GAA3B;AAAlC,OACE,gCADF,CAFF,EAKE;AAAO,MAAA,EAAE,EAAC;AAAV,4BALF,EAME;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA6B,MAAA,EAAE,EAAC;AAAhC,OACG,mBAAIC,KAAK,CAACF,OAAO,CAACG,eAAT,CAAT,EAAoCJ,GAApC,CAAwC,UAACK,CAAD,EAAIC,CAAJ;AAAA,aACvC;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,KAAK,EAAEA;AAAvB,SACGA,CADH,CADuC;AAAA,KAAxC,CADH,CANF,EAaE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,iBAACL,OAAD;AAAA,eAAaL,kBAAkB,CAACK,OAAD,CAA/B;AAAA;AAA/B,aAbF,CADQ;AAAA,GAAT,CAFH,CADF;AAwBD,CArDD;;AAuDA,eAAezB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport Item from '../../components/item';\nimport { Product } from '../../interfaces';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios(config.getProductList);\n  const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n    {\n      url: config.addItem,\n      method: 'POST',\n    },\n    { manual: true }\n  );\n\n  const [cartQuantity, setCartQuantity] = useState(data);\n\n  const saveItemNumber = (number) => {\n    console.log;\n    setCartQuantity(number);\n  };\n  const addItemAndQuantity = () => {\n    console.log('submitting: ');\n    return executePut({ data: { cartQuantity, updatedAt: new Date().toISOString() } });\n  };\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {data.map((product: Product) => (\n        <div key={product._id}>\n          <Item product={product} />\n          <Link href=\"/shop/product/[id]\" as={`/shop/product/${product._id}`}>\n            <a>view product</a>\n          </Link>\n          <label id=\"quantity-select\">Select a quantity:</label>\n          <select name=\"item-quantity\" id=\"quantity-select\">\n            {[...Array(product.inStockQuantity)].map((u, i) => (\n              <option key={i} value={i}>\n                {i}\n              </option>\n            ))}\n          </select>\n          <button type=\"submit\" onClick={(product) => addItemAndQuantity(product)}>\n            Add\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}