{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks'; // import Item from '../../components/item';\n\nimport ProductRow from '../../components/product-row';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1]; // create object with prices and ids\n  // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n\n\n  var _useState = useState(data),\n      updateCart = _useState[0],\n      setUpdateCart = _useState[1];\n\n  var _useState2 = useState('1'),\n      itemQuantity = _useState2[0],\n      setItemQuantity = _useState2[1];\n\n  var addItemAndQuantity = function addItemAndQuantity(product) {\n    console.log('selected product', product);\n    console.log('cart: ', updateCart); // setUpdateCart({ product });\n  }; // const addItemAndQuantity = (product) => {\n  //   console.log('submitting: ');\n  //   // return executePut({ data: { cartQuantity, updatedAt: new Date().toISOString() } });\n  // };\n\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(ProductRow, {\n      product: product\n    });\n  }));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/index.tsx"],"names":["React","useState","config","useAxios","ProductRow","ShopList","getProductList","data","loading","error","refetch","updateCart","setUpdateCart","itemQuantity","setItemQuantity","addItemAndQuantity","product","console","log","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBF,QAAQ,CAACD,MAAM,CAACI,cAAR,CAD/B;AAAA;AAAA;AAAA,MACZC,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ,kBAGrB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXqB,kBAaeT,QAAQ,CAACM,IAAD,CAbvB;AAAA,MAadI,UAbc;AAAA,MAaFC,aAbE;;AAAA,mBAcmBX,QAAQ,CAAC,GAAD,CAd3B;AAAA,MAcdY,YAdc;AAAA,MAcAC,eAdA;;AAgBrB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,OAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,UAAtB,EAFsC,CAGtC;AACD,GAJD,CAhBqB,CAqBrB;AACA;AACA;AACA;;;AAEA,MAAIH,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,SACE,mBACE,iCADF,EAEGF,IAAI,CAACY,GAAL,CAAS,UAACH,OAAD;AAAA,WACR,MAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB,MADQ;AAAA,GAAT,CAFH,CADF;AAQD,CA1CD;;AA4CA,eAAeX,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\n// import Item from '../../components/item';\nimport { Product } from '../../interfaces';\nimport ProductRow from '../../components/product-row';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios(config.getProductList);\n\n  // create object with prices and ids\n\n  // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n\n  const [updateCart, setUpdateCart] = useState(data);\n  const [itemQuantity, setItemQuantity] = useState('1');\n\n  const addItemAndQuantity = (product) => {\n    console.log('selected product', product);\n    console.log('cart: ', updateCart);\n    // setUpdateCart({ product });\n  };\n  // const addItemAndQuantity = (product) => {\n  //   console.log('submitting: ');\n  //   // return executePut({ data: { cartQuantity, updatedAt: new Date().toISOString() } });\n  // };\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {data.map((product: Product) => (\n        <ProductRow product={product} />\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}