{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks'; // import Item from '../../components/item';\n\nimport ProductRow from '../../components/product-row';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1]; // create object with prices and ids\n\n\n  var _useState = useState({}),\n      cartItems = _useState[0],\n      setCartItems = _useState[1]; // const onFormSubmit = () => {\n  //   onSubmit(formData);\n  //   return false;\n  // };\n\n\n  var updateCartItemInformation = function updateCartItemInformation(itemKey) {\n    return function (value) {\n      var basket = _objectSpread({}, cartItems);\n\n      console.log('item to update:', itemKey, value); // if basket[fieldKey] = value; then add or update the value and the\n      // setFormData(data);\n    };\n  };\n\n  var onItemAddition = function onItemAddition(item) {\n    console.log('here, ', item);\n  }; // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n  // <UserDropdown\n  //           title={translate('form.field.occupation.title')}\n  //           placeholder={translate('components.select.minimalist_placeholder')}\n  //           fieldValue={formData[FORM_FIELD_DATA.OCCUPATION]}\n  //           onFormDataChange={setFormDataValue(FORM_FIELD_DATA.OCCUPATION)}\n  //           keys={USER_OCCUPATION}\n  //         />\n\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(ProductRow, {\n      key: product._id,\n      product: product,\n      onCardItemChange: updateCartItemInformation,\n      onItemAddition: onItemAddition\n    });\n  }));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/index.tsx"],"names":["React","useState","config","useAxios","ProductRow","ShopList","getProductList","data","loading","error","refetch","cartItems","setCartItems","updateCartItemInformation","itemKey","value","basket","console","log","onItemAddition","item","map","product","_id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBF,QAAQ,CAACD,MAAM,CAACI,cAAR,CAD/B;AAAA;AAAA;AAAA,MACZC,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ,kBAGrB;;;AAHqB,kBAIaT,QAAQ,CAAC,EAAD,CAJrB;AAAA,MAIdU,SAJc;AAAA,MAIHC,YAJG,iBAMrB;AACA;AACA;AACA;;;AACA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,OAAD;AAAA,WAAa,UAACC,KAAD,EAAW;AACxD,UAAIC,MAAM,qBAAQL,SAAR,CAAV;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,OAA/B,EAAwCC,KAAxC,EAFwD,CAGxD;AACA;AACD,KALiC;AAAA,GAAlC;;AAOA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AACD,GAFD,CAjBqB,CAqBrB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAIZ,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,SACE,mBACE,iCADF,EAEGF,IAAI,CAACc,GAAL,CAAS,UAACC,OAAD;AAAA,WACR,MAAC,UAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,MAAA,OAAO,EAAED,OAFX;AAGE,MAAA,gBAAgB,EAAET,yBAHpB;AAIE,MAAA,cAAc,EAAEM;AAJlB,MADQ;AAAA,GAAT,CAFH,CADF;AAaD,CAzDD;;AA2DA,eAAed,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\n// import Item from '../../components/item';\nimport { Product } from '../../interfaces';\nimport ProductRow from '../../components/product-row';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios(config.getProductList);\n\n  // create object with prices and ids\n  const [cartItems, setCartItems] = useState({});\n\n  // const onFormSubmit = () => {\n  //   onSubmit(formData);\n  //   return false;\n  // };\n  const updateCartItemInformation = (itemKey) => (value) => {\n    let basket = { ...cartItems };\n    console.log('item to update:', itemKey, value);\n    // if basket[fieldKey] = value; then add or update the value and the\n    // setFormData(data);\n  };\n\n  const onItemAddition = (item) => {\n    console.log('here, ', item);\n  };\n\n  // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n\n  // <UserDropdown\n  //           title={translate('form.field.occupation.title')}\n  //           placeholder={translate('components.select.minimalist_placeholder')}\n  //           fieldValue={formData[FORM_FIELD_DATA.OCCUPATION]}\n  //           onFormDataChange={setFormDataValue(FORM_FIELD_DATA.OCCUPATION)}\n  //           keys={USER_OCCUPATION}\n  //         />\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {data.map((product: Product) => (\n        <ProductRow\n          key={product._id}\n          product={product}\n          onCardItemChange={updateCartItemInformation}\n          onItemAddition={onItemAddition}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}