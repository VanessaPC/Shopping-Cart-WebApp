{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport config from '../../../config';\nimport useAxios from 'axios-hooks';\n\nvar Checkout = function Checkout() {\n  var _useAxios = useAxios(config.getShoppingCart),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      cartData = _useAxios2$.data,\n      loadingCart = _useAxios2$.loading,\n      cartError = _useAxios2$.error,\n      refetchCart = _useAxios2[1];\n\n  if (loadingCart) {\n    return __jsx(\"p\", null, \"Loading\");\n  }\n\n  if (cartError) {\n    return __jsx(\"p\", null, \"There's been an issue with this cart.\");\n  }\n\n  console.log('router:', cartData);\n  return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Your cart here:\"), __jsx(\"p\", null, \"Total items: \", cartData.totalItems), __jsx(\"p\", null, \"Total price: \", cartData.totalPrice, \" Euros\"), cartData.cartItems.map(function (item) {\n    return __jsx(\"div\", {\n      key: item._id\n    }, __jsx(\"p\", null, \"Item name: \", item.name), __jsx(\"p\", null, \"Total item/s price: \", item.price), __jsx(\"p\", null, \"Total quantity:\"), __jsx(\"button\", {\n      type: \"submit\"\n    }, \"Remove item from basket\"));\n  }));\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/checkout/index.tsx"],"names":["React","config","useAxios","Checkout","getShoppingCart","cartData","data","loadingCart","loading","cartError","error","refetchCart","console","log","totalItems","totalPrice","cartItems","map","item","_id","name","price"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAC6DD,QAAQ,CAACD,MAAM,CAACG,eAAR,CADrE;AAAA;AAAA;AAAA,MACNC,QADM,eACZC,IADY;AAAA,MACaC,WADb,eACIC,OADJ;AAAA,MACiCC,SADjC,eAC0BC,KAD1B;AAAA,MAC8CC,WAD9C;;AAGrB,MAAIJ,WAAJ,EAAiB;AACf,WAAO,2BAAP;AACD;;AAED,MAAIE,SAAJ,EAAe;AACb,WAAO,yDAAP;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,QAAvB;AACA,SACE,4BACE,mCADF,EAEE,kCAAiBA,QAAQ,CAACS,UAA1B,CAFF,EAGE,kCAAiBT,QAAQ,CAACU,UAA1B,WAHF,EAIGV,QAAQ,CAACW,SAAT,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,WACtB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAf,OACE,gCAAeD,IAAI,CAACE,IAApB,CADF,EAEE,yCAAwBF,IAAI,CAACG,KAA7B,CAFF,EAGE,mCAHF,EAgBE;AAAQ,MAAA,IAAI,EAAC;AAAb,iCAhBF,CADsB;AAAA,GAAvB,CAJH,CADF;AA2BD,CAtCD;;AAwCA,eAAelB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport config from '../../../config';\nimport useAxios from 'axios-hooks';\n\nconst Checkout = () => {\n  const [{ data: cartData, loading: loadingCart, error: cartError }, refetchCart] = useAxios(config.getShoppingCart);\n\n  if (loadingCart) {\n    return <p>Loading</p>;\n  }\n\n  if (cartError) {\n    return <p>There's been an issue with this cart.</p>;\n  }\n  console.log('router:', cartData);\n  return (\n    <>\n      <p>Your cart here:</p>\n      <p>Total items: {cartData.totalItems}</p>\n      <p>Total price: {cartData.totalPrice} Euros</p>\n      {cartData.cartItems.map((item) => (\n        <div key={item._id}>\n          <p>Item name: {item.name}</p>\n          <p>Total item/s price: {item.price}</p>\n          <p>Total quantity:</p>\n          {/* <select\n            name=\"item-quantity\"\n            id=\"quantity-select\"\n            value={selectedQuantity}\n            onChange={(e) => onQuantityUpdate(parseInt(e.target.value))}\n          >\n            {[...Array(product.inStockQuantity)].map((u, i) => (\n              <option key={i} value={i + 1}>\n                {i + 1}\n              </option>\n            ))}\n          </select> */}\n          <button type=\"submit\">Remove item from basket</button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}