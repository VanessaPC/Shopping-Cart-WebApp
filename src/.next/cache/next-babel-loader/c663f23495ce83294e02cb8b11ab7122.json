{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useAxios from 'axios-hooks';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios('http://localhost:3100/api/shop'),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1];\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  if (!loading && !error) {\n    data && data.map(function (product) {\n      console.log(product.id);\n      return product.id;\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), __jsx(\"p\", null, data));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/index.tsx"],"names":["React","useAxios","ShopList","data","loading","error","refetch","map","product","console","log","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,aAArB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBD,QAAQ,CAAC,gCAAD,CAD/B;AAAA;AAAA;AAAA,MACZE,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ;;AAGrB,MAAIF,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,MAAI,CAACD,OAAD,IAAY,CAACC,KAAjB,EAAwB;AACtBF,IAAAA,IAAI,IACFA,IAAI,CAACI,GAAL,CAAS,UAACC,OAAD,EAAa;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,EAApB;AACA,aAAOH,OAAO,CAACG,EAAf;AACD,KAHD,CADF;AAKD;;AACD,SACE,mBACE,iCADF,EAEE,iBAAIR,IAAJ,CAFF,CADF;AAWD,CA7BD;;AAqCA,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport ItemView from './item/[slug]';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios('http://localhost:3100/api/shop');\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  if (!loading && !error) {\n    data &&\n      data.map((product) => {\n        console.log(product.id);\n        return product.id;\n      });\n  }\n  return (\n    <div>\n      <h2>Product List</h2>\n      <p>{data}</p>\n      {/* {data.map((product: Product) => (\n        <Link key={product._id} href=\"/shop/item/[slug]\" as={`/shop/item/${product._id}`}>\n          <ItemView product={product} />\n        </Link>\n      ))} */}\n    </div>\n  );\n};\n\ntype Product = {\n  _id: number;\n  name: string;\n  quantity: number;\n  price: number;\n};\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}