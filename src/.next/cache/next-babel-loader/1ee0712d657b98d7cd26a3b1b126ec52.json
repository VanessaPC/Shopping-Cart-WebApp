{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport ProductRow from '../../components/product-row';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1]; // create object with prices and ids\n\n\n  var _useState = useState({}),\n      cartItems = _useState[0],\n      setCartItems = _useState[1]; // const onFormSubmit = () => {\n  //   onSubmit(formData);\n  //   return false;\n  // };\n\n\n  var updateCartItemInformation = function updateCartItemInformation(itemKey) {\n    return function (value) {\n      var basket = _objectSpread({}, cartItems);\n\n      console.log('item to update:', itemKey, value); // if basket[fieldKey] = value; then add or update the value and the\n      // setFormData(data);\n    };\n  };\n\n  var onItemAddition = function onItemAddition(item) {\n    console.log('here, ', item);\n  }; // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n  // <UserDropdown\n  //           title={translate('form.field.occupation.title')}\n  //           placeholder={translate('components.select.minimalist_placeholder')}\n  //           fieldValue={formData[FORM_FIELD_DATA.OCCUPATION]}\n  //           onFormDataChange={setFormDataValue(FORM_FIELD_DATA.OCCUPATION)}\n  //           keys={USER_OCCUPATION}\n  //         />\n\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id\n    }, __jsx(ProductRow, {\n      product: product,\n      onCardItemChange: updateCartItemInformation,\n      onItemAddition: onItemAddition\n    }), __jsx(Link, {\n      href: \"/shop/product/[id]\",\n      as: \"/shop/product/\".concat(product._id)\n    }, __jsx(\"a\", null, \"view product\")));\n  }));\n};\n\nexport default ShopList;","map":null,"metadata":{},"sourceType":"module"}