{"ast":null,"code":"var _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport Item from '../../components/item';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios(config.getProductList),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1]; // const [{ data: putData, loading: putLoading, error: putError }, executePut] = useAxios(\n  //   {\n  //     url: config.addItem,\n  //     method: 'POST',\n  //   },\n  //   { manual: true }\n  // );\n\n\n  var _useState = useState(data),\n      updateCart = _useState[0],\n      setUpdateCart = _useState[1];\n\n  var _useState2 = useState('1'),\n      itemQuantity = _useState2[0],\n      setItemQuantity = _useState2[1];\n\n  var addItemAndQuantity = function addItemAndQuantity(product) {\n    console.log('selected product', product);\n    console.log('cart: ', updateCart);\n    setUpdateCart({\n      product: product\n    }); // setCartQuantity(number);\n  }; // const addItemAndQuantity = (product) => {\n  //   console.log('submitting: ');\n  //   // return executePut({ data: { cartQuantity, updatedAt: new Date().toISOString() } });\n  // };\n\n\n  [{\n    name: _this,\n    qtt: 2\n  }, {\n    name: RTCDtlsTransportStateChangedEvent,\n    qtt: 3\n  }];\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id\n    }, __jsx(Item, {\n      product: product\n    }), __jsx(Link, {\n      href: \"/shop/product/[id]\",\n      as: \"/shop/product/\".concat(product._id)\n    }, __jsx(\"a\", null, \"view product\")), __jsx(\"label\", {\n      id: \"quantity-select\"\n    }, \"Select a quantity:\"), __jsx(\"select\", {\n      name: \"item-quantity\",\n      id: \"quantity-select\",\n      value: itemQuantity,\n      onChange: function onChange(e) {\n        return setItemQuantity(e.target.value);\n      }\n    }, _toConsumableArray(Array(product.inStockQuantity)).map(function (u, i) {\n      return __jsx(\"option\", {\n        key: i,\n        value: i\n      }, i);\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: function onClick(product) {\n        return addItemAndQuantity(product);\n      }\n    }, \"Add\"));\n  }));\n};\n\nexport default ShopList;","map":null,"metadata":{},"sourceType":"module"}