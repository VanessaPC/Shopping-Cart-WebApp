{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks';\nimport Item from '../item';\n\nvar ProductRow = function ProductRow(_ref) {\n  var product = _ref.product;\n  console.log('product in row: ', product.inStockQuantity);\n\n  var _useState = useState('1'),\n      selectedQuantity = _useState[0],\n      setSelectedQuantity = _useState[1]; // on Add, update the item in the server\n\n\n  var _useAxios = useAxios({\n    url: config.addItem,\n    method: 'POST'\n  }, {\n    manual: true\n  }),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      putData = _useAxios2$.data,\n      putLoading = _useAxios2$.loading,\n      putError = _useAxios2$.error,\n      executePost = _useAxios2[1];\n\n  var onItemAddition = function onItemAddition() {\n    console.log('product', product);\n  };\n\n  return __jsx(\"div\", {\n    key: product._id\n  }, __jsx(Item, {\n    product: product\n  }), __jsx(\"label\", {\n    id: \"quantity-select\"\n  }, \"Select a quantity:\"), __jsx(\"select\", {\n    name: \"item-quantity\",\n    id: \"quantity-select\",\n    value: selectedQuantity,\n    onChange: function onChange(e) {\n      return setSelectedQuantity(e.target.value);\n    }\n  }, _toConsumableArray(Array(product.inStockQuantity)).map(function (u, i) {\n    return __jsx(\"option\", {\n      key: i,\n      value: i + 1\n    }, i + 1);\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: onItemAddition\n  }, \"Add\"));\n};\n\nexport default ProductRow;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/components/product-row/index.tsx"],"names":["React","useState","config","useAxios","Item","ProductRow","product","console","log","inStockQuantity","selectedQuantity","setSelectedQuantity","url","addItem","method","manual","putData","data","putLoading","loading","putError","error","executePost","onItemAddition","_id","e","target","value","Array","map","u","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,OAAO,CAACG,eAAxC;;AADkC,kBAGcR,QAAQ,CAAC,GAAD,CAHtB;AAAA,MAG3BS,gBAH2B;AAAA,MAGTC,mBAHS,iBAKlC;;;AALkC,kBAM6CR,QAAQ,CACrF;AACES,IAAAA,GAAG,EAAEV,MAAM,CAACW,OADd;AAEEC,IAAAA,MAAM,EAAE;AAFV,GADqF,EAKrF;AAAEC,IAAAA,MAAM,EAAE;AAAV,GALqF,CANrD;AAAA;AAAA;AAAA,MAMnBC,OANmB,eAMzBC,IANyB;AAAA,MAMDC,UANC,eAMVC,OANU;AAAA,MAMkBC,QANlB,eAMWC,KANX;AAAA,MAM8BC,WAN9B;;AAclC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BhB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,GAAG,EAAEA,OAAO,CAACkB;AAAlB,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAElB;AAAf,IADF,EAEE;AAAO,IAAA,EAAE,EAAC;AAAV,0BAFF,EAGE;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,EAAE,EAAC,iBAFL;AAGE,IAAA,KAAK,EAAEI,gBAHT;AAIE,IAAA,QAAQ,EAAE,kBAACe,CAAD;AAAA,aAAOd,mBAAmB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B;AAAA;AAJZ,KAMG,mBAAIC,KAAK,CAACtB,OAAO,CAACG,eAAT,CAAT,EAAoCoB,GAApC,CAAwC,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACvC;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAEA,CAAC,GAAG;AAA3B,OACGA,CAAC,GAAG,CADP,CADuC;AAAA,GAAxC,CANH,CAHF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAER;AAA/B,WAfF,CADF;AAqBD,CAvCD;;AAyCA,eAAelB,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport config from '../../config';\nimport useAxios from 'axios-hooks';\nimport Link from 'next/link';\nimport Item from '../item';\n\nconst ProductRow = ({ product }) => {\n  console.log('product in row: ', product.inStockQuantity);\n\n  const [selectedQuantity, setSelectedQuantity] = useState('1');\n\n  // on Add, update the item in the server\n  const [{ data: putData, loading: putLoading, error: putError }, executePost] = useAxios(\n    {\n      url: config.addItem,\n      method: 'POST',\n    },\n    { manual: true }\n  );\n\n  const onItemAddition = () => {\n    console.log('product', product);\n  };\n\n  return (\n    <div key={product._id}>\n      <Item product={product} />\n      <label id=\"quantity-select\">Select a quantity:</label>\n      <select\n        name=\"item-quantity\"\n        id=\"quantity-select\"\n        value={selectedQuantity}\n        onChange={(e) => setSelectedQuantity(e.target.value)}\n      >\n        {[...Array(product.inStockQuantity)].map((u, i) => (\n          <option key={i} value={i + 1}>\n            {i + 1}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\" onClick={onItemAddition}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default ProductRow;\n"]},"metadata":{},"sourceType":"module"}