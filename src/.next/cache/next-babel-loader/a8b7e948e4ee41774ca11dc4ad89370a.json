{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useAxios from 'axios-hooks';\n\nvar ShopList = function ShopList() {\n  var _useAxios = useAxios('http://localhost:3100/api/shop'),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1];\n\n  console.log('data:::::', data);\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \"Our list broke!\");\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"Product List\"), data.map(function (product) {\n    return __jsx(React.Fragment, null, __jsx(\"p\", null, product.name), __jsx(\"p\", null, product.price));\n  }));\n};\n\nexport default ShopList;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shopping-cart/index.tsx"],"names":["React","useAxios","ShopList","data","loading","error","refetch","console","log","map","product","name","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACuBD,QAAQ,CAAC,gCAAD,CAD/B;AAAA;AAAA;AAAA,MACZE,IADY,eACZA,IADY;AAAA,MACNC,OADM,eACNA,OADM;AAAA,MACGC,KADH,eACGA,KADH;AAAA,MACYC,OADZ;;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAzB;;AAEA,MAAIC,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO,mCAAP;AACD;;AAED,SACE,mBACE,iCADF,EAEGF,IAAI,CAACM,GAAL,CAAS,UAACC,OAAD;AAAA,WACR,4BACE,iBAAIA,OAAO,CAACC,IAAZ,CADF,EAEE,iBAAID,OAAO,CAACE,KAAZ,CAFF,CADQ;AAAA,GAAT,CAFH,CADF;AAWD,CAvBD;;AAyBA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios('http://localhost:3100/api/shop');\n  console.log('data:::::', data);\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n\n  if (error) {\n    return <p>Our list broke!</p>;\n  }\n\n  return (\n    <div>\n      <h2>Product List</h2>\n      {data.map((product) => (\n        <>\n          <p>{product.name}</p>\n          <p>{product.price}</p>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"]},"metadata":{},"sourceType":"module"}