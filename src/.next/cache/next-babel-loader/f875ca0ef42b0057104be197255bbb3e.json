{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport config from '../../../config';\nimport Item from '../../../components/item';\nimport { useRouter } from 'next/router';\nimport useAxios from 'axios-hooks';\n\nvar Product = function Product(product) {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useAxios = useAxios(config.findSingleItem(id)),\n      _useAxios2 = _slicedToArray(_useAxios, 2),\n      _useAxios2$ = _useAxios2[0],\n      data = _useAxios2$.data,\n      loading = _useAxios2$.loading,\n      error = _useAxios2$.error,\n      refetch = _useAxios2[1];\n\n  if (loading) {\n    return __jsx(\"p\", null, \"loading\");\n  }\n\n  if (error) {\n    return __jsx(\"p\", null, \" error\");\n  }\n\n  return __jsx(Item, {\n    product: data\n  });\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/vanessa/Documents/Projects/ShoppingCart/shoppingcart/src/pages/shop/product/[id].tsx"],"names":["React","config","Item","useRouter","useAxios","Product","product","router","id","query","findSingleItem","data","loading","error","refetch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAa;AAC3B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAD2B,MAEnBK,EAFmB,GAEZD,MAAM,CAACE,KAFK,CAEnBD,EAFmB;;AAAA,kBAGiBJ,QAAQ,CAACH,MAAM,CAACS,cAAP,CAAsBF,EAAtB,CAAD,CAHzB;AAAA;AAAA;AAAA,MAGlBG,IAHkB,eAGlBA,IAHkB;AAAA,MAGZC,OAHY,eAGZA,OAHY;AAAA,MAGHC,KAHG,eAGHA,KAHG;AAAA,MAGMC,OAHN;;AAK3B,MAAIF,OAAJ,EAAa;AACX,WAAO,2BAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAO,0BAAP;AACD;;AACD,SAAO,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEF;AAAf,IAAP;AACD,CAZD;;AAcA,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport config from '../../../config';\n\nimport Item from '../../../components/item';\nimport { useRouter } from 'next/router';\nimport useAxios from 'axios-hooks';\n\nconst Product = (product) => {\n  const router = useRouter();\n  const { id } = router.query;\n  const [{ data, loading, error }, refetch] = useAxios(config.findSingleItem(id));\n\n  if (loading) {\n    return <p>loading</p>;\n  }\n  if (error) {\n    return <p> error</p>;\n  }\n  return <Item product={data} />;\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}