{"version":3,"file":"static/webpack/static/development/pages/shop.js.a783cacbf9a27d89e9b8.hot-update.js","sources":["webpack:///./pages/shop/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport config from '../../config';\nimport Link from 'next/link';\nimport useAxios from 'axios-hooks';\nimport { Product } from '../../interfaces';\nimport ProductRow from '../../components/product-row';\n\nconst ShopList = () => {\n  const [{ data, loading, error }, refetch] = useAxios(config.getProductList);\n  const [{ data: cartData, loading: loadingCart, error: cartError }, refetchCart] = useAxios(config.getShoppingCart);\n\n  if (loading || loadingCart) {\n    return <p>loading</p>;\n  }\n\n  if (error || cartError) {\n    return <p>Our list broke!</p>;\n  }\n  const getItemInCart = (productId: number) => cartData.cartItems.find((item) => item._id === productId);\n  return (\n    <div>\n      <Link href=\"/shop/checkout/[cart]\" as={`/shop/checkout/checkout`}>\n        <a>Go to checkout</a>\n      </Link>\n      <h2>Product List</h2>\n      {data.map((product: Product) => (\n        <div key={product._id}>\n          <ProductRow\n            product={product}\n            savedQuantity={getItemInCart(product._id) ? getItemInCart(product._id).quantity : 0}\n            onCartUpdate={refetchCart}\n          />\n          <Link href=\"/shop/product/[id]\" as={`/shop/product/${product._id}`}>\n            <a>Go to checkout</a>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ShopList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAPA;AAcA;AACA;AACA;;;;A","sourceRoot":""}